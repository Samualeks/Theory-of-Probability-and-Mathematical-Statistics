#!/usr/bin/env python
# coding: utf-8

# Теория вероятностей и математическая статистика
# Урок 6. Взаимосвязь величин. Параметрические и непараметрические показатели корреляции. Корреляционный анализ.
# 

# 1. Даны значения величины заработной платы заемщиков банка (zp) и значения их поведенческого кредитного скоринга (ks):
# zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
# ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
# Найдите ковариацию этих двух величин с помощью элементарных действий, а затем с помощью функции cov из numpy
# Полученные значения должны быть равны.
# Найдите коэффициент корреляции Пирсона с помощью ковариации и среднеквадратичных отклонений двух признаков,
# а затем с использованием функций из библиотек numpy и pandas.

# In[1]:


import pandas as pd
import numpy as np
from statsmodels.stats.weightstats import _tconfint_generic as t_stat


# In[2]:


zp = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
ks = np.array( [401, 574, 874, 919, 459, 739, 653, 902, 746, 832])


# In[3]:


M_X = zp.mean()
M_Y = ks.mean()
M_XY = (zp * ks).mean()


# In[4]:


cov_ks = M_XY - M_X * M_Y
cov_ks


# In[5]:


np.cov(zp, ks, ddof=0)


# In[6]:


cov_ks2 = ((zp - zp.mean()) * (ks - ks.mean())).mean()
cov_ks2


# In[7]:


std_X = zp.std()
std_Y = ks.std()


# In[8]:


corr_ks = cov_ks / (std_X * std_Y)
corr_ks


# In[9]:


np.corrcoef(zp, ks)


# 2. Измерены значения IQ выборки студентов,
# обучающихся в местных технических вузах:
# 131, 125, 115, 122, 131, 115, 107, 99, 125, 111.
# Известно, что в генеральной совокупности IQ распределен нормально.
# Найдите доверительный интервал для математического ожидания с надежностью 0.95.

# In[10]:


X = np.array([131.0, 125.0, 115.0, 122.0, 131.0, 115.0, 107.0, 99.0, 125.0, 111.0])
mean_X = X.mean()
std_X = X.std(ddof=1)
mean_std_X = std_X / (np.sqrt(len(X)))


# In[11]:


t_stat(mean_X, mean_std_X,len(X) - 1, 0.05, 'two-sided')


# 3. Известно, что рост футболистов в сборной распределен нормально
# с дисперсией генеральной совокупности, равной 25 кв.см. Объем выборки равен 27,
# среднее выборочное составляет 174.2. Найдите доверительный интервал для математического
# ожидания с надежностью 0.95.

# In[12]:


mean_X = 174.2
std_X = np.sqrt(25)
mean_std_X = std_X / np.sqrt(27)


# In[13]:


t_stat(mean_X, mean_std_X,27 - 1, 0.05, 'two-sided')


# In[ ]:




